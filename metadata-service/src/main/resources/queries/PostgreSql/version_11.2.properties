metadata.query.procedure=select \
        sch.nspname      as parent_object_id, \
        concat_ws('.', prc.pronamespace, prc.oid) as current_object_id, \
        prc.proname as name, \
        false as is_aggregate, \
        case when typ.typname = 'trigger' then true else false end as is_trigger_function, \
        prorettype::regtype::text as return_type, \
        prc.prosrc as text \
    from \
        pg_proc as prc \
        join pg_namespace as sch on sch.oid = prc.pronamespace \
        join pg_type as typ on typ.oid = prc.prorettype \
    where \
        typ.typname <> 'trigger' \
        and prc.prokind in ('p') \
        and current_database() = ? \
        and sch.nspname = ?
metadata.query.function=select \
        sch.nspname as parent_object_id, \
        concat_ws('.', prc.pronamespace, prc.oid) as current_object_id, \
        prc.proname as name, \
        CASE WHEN prc.prokind='a' THEN true ELSE false END as is_aggregate, \
        case when typ.typname = 'trigger' THEN true ELSE false end as is_trigger_function, \
        prorettype::regtype::text as return_type, \
        prc.prosrc as text \
    from \
        pg_proc as prc \
        join pg_namespace as sch on sch.oid = prc.pronamespace \
        join pg_type as typ on typ.oid = prc.prorettype \
    where \
        typ.typname <> 'trigger' \
        and prc.prokind in ('f', 'w') \
        and current_database() = ? \
        and sch.nspname = ?
metadata.query.aggregate-function=select \
        sch.nspname as parent_object_id, \
        concat_ws('.', prc.pronamespace, prc.oid) as current_object_id, \
        prc.proname as name, \
        CASE WHEN prc.prokind='a' THEN true ELSE false END as is_aggregate, \
        case when typ.typname = 'trigger' THEN true ELSE false end as is_trigger_function, \
        prorettype::regtype::text as return_type, \
        prc.prosrc as text \
    from \
        pg_proc as prc \
        join pg_namespace as sch on sch.oid = prc.pronamespace \
        join pg_type as typ on typ.oid = prc.prorettype \
    where \
        typ.typname <> 'trigger' \
        and prc.prokind in ('a') \
        and current_database() = ? \
        and sch.nspname = ?